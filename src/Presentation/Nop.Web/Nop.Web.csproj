<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <Copyright>Copyright © Nop Solutions, Ltd</Copyright>
    <Company>Nop Solutions, Ltd</Company>
    <Authors>Nop Solutions, Ltd</Authors>
    <Version>4.4.0.0</Version>
    <Description>Nop.Web is also an MVC web application project, a presentation layer for public store and admin area.</Description>
    <PackageLicenseUrl>https://www.nopcommerce.com/license</PackageLicenseUrl>
    <PackageProjectUrl>https://www.nopcommerce.com/</PackageProjectUrl>
    <RepositoryUrl>https://github.com/nopSolutions/nopCommerce</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <!--Set this parameter to true to get the dlls copied from the NuGet cache to the output of your project-->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <!--When true, compiles and emits the Razor assembly as part of publishing the project-->
    <RazorCompileOnPublish>false</RazorCompileOnPublish>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Libraries\Nop.Core\Nop.Core.csproj" />
    <ProjectReference Include="..\..\Libraries\Nop.Data\Nop.Data.csproj" />
    <ProjectReference Include="..\..\Libraries\Nop.Services\Nop.Services.csproj" />
    <ProjectReference Include="..\Nop.Web.Framework\Nop.Web.Framework.csproj" />
  </ItemGroup>

  <ItemGroup>
    <!-- We copy the entire \App_Data directory. But we ignore JSON files and data protection keys  -->
    <Content Include="App_Data\**" CopyToPublishDirectory="PreserveNewest" Exclude="App_Data\*.json" />
    <Content Remove="App_Data\*.json" />
    <Content Update="App_Data\DataProtectionKeys\*.xml" CopyToPublishDirectory="Never" />

    <Compile Remove="Plugins\**;Themes\**" />
    <Content Remove="Plugins\**;Themes\**" />
    <EmbeddedResource Remove="Plugins\**;Themes\**" />
    <None Remove="Plugins\**;Themes\**" />

    <Content Include="Plugins\bin\placeholder.txt" CopyToPublishDirectory="PreserveNewest" />

    <Content Include="Themes\PdBohemia\Views\Shared\Components\Footer\Default.cshtml" />
    <None Include="Plugins\**" CopyToPublishDirectory="PreserveNewest" Exclude="Plugins\**\runtimes\**;Plugins\**\ref\**;Plugins\**\*.pdb" />

    <Content Include="Themes\**" CopyToPublishDirectory="PreserveNewest" Exclude="Themes\**\*.config;Themes\**\*.cshtml;Themes\**\*.json" />
    <None Include="Themes\**" CopyToPublishDirectory="PreserveNewest" />

    <!-- We copy the \Logs directory -->
    <Content Include="Logs\**" CopyToPublishDirectory="PreserveNewest" />
    <Content Remove="Themes\PdBohemia\Content\VideoHomepageText.html" />
    <None Remove="Themes\Bohemia\Content\css\blackshop.css" />
    <None Remove="Themes\Bohemia\Content\css\blackshop.rtl.css" />
    <None Remove="Themes\Bohemia\Content\css\linearicons.css" />
    <None Remove="Themes\Bohemia\Content\css\responsive.css" />
    <None Remove="Themes\Bohemia\Content\css\responsive.rtl.css" />
    <None Remove="Themes\Bohemia\Content\font\BlackShopIcon.eot" />
    <None Remove="Themes\Bohemia\Content\font\BlackShopIcon.svg" />
    <None Remove="Themes\Bohemia\Content\font\BlackShopIcon.ttf" />
    <None Remove="Themes\Bohemia\Content\font\BlackShopIcon.woff" />
    <None Remove="Themes\Bohemia\Content\font\Linearicons.eot" />
    <None Remove="Themes\Bohemia\Content\font\Linearicons.svg" />
    <None Remove="Themes\Bohemia\Content\font\Linearicons.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Linearicons.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Bold.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Bold.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Bold.woff2" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-ExtraBold.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-ExtraBold.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-ExtraBold.woff2" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-ExtraLight.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-ExtraLight.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-ExtraLight.woff2" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Light.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Light.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Light.woff2" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Medium.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Medium.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Medium.woff2" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Regular.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Regular.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Regular.woff2" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-SemiBold.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-SemiBold.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-SemiBold.woff2" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Thin.ttf" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Thin.woff" />
    <None Remove="Themes\Bohemia\Content\font\Montserrat-Thin.woff2" />
    <None Remove="Themes\Bohemia\Content\js\slinky.min.js" />
    <None Remove="Themes\PdBohemia\Content\css\ab-video-styles.css" />
    <None Remove="Themes\PdBohemia\Content\images\social-floating-whatsapp.png" />
    <None Remove="Themes\PdBohemia\Views\Shared\Components\Footer\Default.cshtml" />

    <None Update="Areas\Admin\sitemap.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <!-- This setting fixes the problem caused by this update in the websdk in vs2019
    https://github.com/aspnet/websdk/commit/7e6b193ddcf1eec5c0a88a9748c626775555273e#diff-edf5a48ed0d4aa5a4289cb857bf46a04
    Therefore, we restore the standard configuration behavior (there was no copy to the output directory) 
    in order to avoid the "Duplicate dll" error during publication. 
    We can also use “ExcludeConfigFilesFromBuildOutput” according to https://github.com/aspnet/AspNetCore/issues/14017 -->
    <Content Update="**\*.config;**\*.json" CopyToOutputDirectory="Never" CopyToPublishDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Plugins\" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="Themes\PdBohemia\Content\images\social-sprite.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="Themes\PdBohemia\Views\Shared\Components\Footer\Default.cshtml">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <!-- This target execute after "Build" target.
    We use it to clean up folder with plugins from unnecessary and obsolete libraries. -->
  <Target Name="NopTarget" AfterTargets="Build">
    <ItemGroup>
      <!-- Get plugin description files to get plugin paths -->
      <PluginsDescription Include="$(MSBuildProjectDirectory)\Plugins\**\plugin.json;" />
      <!-- Get paths for all plugins -->
      <PluginsFolders Include="@(PluginsDescription->'%(relativedir)')" />

      <!-- Get all the libraries from the shadow copy folder to remove them,
        because depending on the settings, this may not happen when the application is starting,
        but this can lead to unpredictable results during debugging of the project. -->
      <ShadowCopiesLibraries Include="$(MSBuildProjectDirectory)\Plugins\bin\*.*" Exclude="$(MSBuildProjectDirectory)\Plugins\bin\placeholder.txt" />

      <!-- Get paths for ClearPluginAssemblies project -->
      <ClearPluginAssemblies Include="$(MSBuildProjectDirectory)\..\..\Build\ClearPluginAssemblies.proj" />

    </ItemGroup>
    <PropertyGroup>
      <PluginsFolders>@(PluginsFolders)</PluginsFolders>
    </PropertyGroup>
    <!-- Delete libraries from the shadow copy folder -->
    <Delete Files="@(ShadowCopiesLibraries)" />
    <!-- When .NET Core builds a project, it copies all referenced libraries to the output folder.
      For plugins it creates too many unnecessary files that just take up space.
      At the moment you can't disable this behavior. That's why we have to manually delete all unnecessary libraries from plugin output directories. -->
    <MSBuild Projects="@(ClearPluginAssemblies)" Properties="PluginPath=$(PluginsFolders)" Targets="NopClear" />

  </Target>

  <PropertyGroup>
    <!--The common language runtime (CLR) supports two types of garbage collection:
      workstation garbage collection, which is available on all systems, and server garbage collection,
      which is available on multiprocessor systems.
      
      For single-processor computers, the default workstation garbage collection should be the fastest option.
      Either workstation or server can be used for two-processor computers.
      Server garbage collection should be the fastest option for more than two processors.
      
      More details about GC you can see here: https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/fundamentals-->
    <ServerGarbageCollection>false</ServerGarbageCollection>
    <!--In workstation or server garbage collection, you can enable concurrent garbage collection,
      which enables threads to run concurrently with a dedicated thread that performs the garbage
      collection for most of the duration of the collection.
      
      Concurrent garbage collection enables interactive applications to be more responsive by
      minimizing pauses for a collection. Managed threads can continue to run most of the time while
      the concurrent garbage collection thread is running. This results in shorter pauses while
      a garbage collection is occurring.
      
      To improve performance when several processes are running, disable concurrent garbage collection.
      
      More details here: https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/fundamentals#concurrent-garbage-collection-->
    <ConcurrentGarbageCollection>false</ConcurrentGarbageCollection>
  </PropertyGroup>

</Project>